---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: logshuttle-fluentd
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: logshuttle-fluentd
  namespace: kube-system
rules:
- apiGroups:
  - ""
  resources:
  - pods
  - namespaces
  verbs:
  - get
  - list
  - watch
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: logshuttle-fluentd
roleRef:
  kind: ClusterRole
  name: logshuttle-fluentd
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: ServiceAccount
  name: logshuttle-fluentd
  namespace: kube-system
---
kind: DaemonSet
apiVersion: extensions/v1beta1
metadata:
  name: logshuttle-fluentd
  namespace: kube-system
  labels:
    k8s-app: logshuttle-fluentd
    kubernetes.io/cluster-service: "true"
spec:
  selector:
    matchLabels:
      k8s-app: fluentd-shard
  template:
    metadata:
      labels:
        k8s-app: fluentd-shard
    spec:
      volumes:
      - name: varlog
        hostPath:
          path: "/var/log"
      - name: docker-containers
        hostPath:
          path: "/var/lib/docker/containers"
      - name: ssl-certs
        hostPath:
          path: "/usr/share/ca-certificates"
      containers:
      - name: fluentd
        image: akkeris/logshuttle-fluentd:release-16
        securityContext:
          privileged: true
        env:
        - name: FLUENT_UID
          value: "0"
        - name: FLUENT_KAFKA_BROKERS
          value: "kafkalogs.akkeris-system.svc.cluster.local"
        - name: FLUENT_KAFKA_DEFAULT_TOPIC
          value: "default"
        - name: FLUENT_KAFKA_OUTPUT_DATA_TYPE
          value: "json"
        - name: FLUENT_KAFKA_OUTPUT_INCLUDE_TAG
          value: "false"
        - name: FLUENT_KAFKA_OUTPUT_INCLUDE_TIME
          value: "false"
        - name: FLUENT_KAFKA_MAX_SEND_RETRIES
          value: "3"
        - name: FLUENT_KAFKA_REQUIRED_ACKS
          value: "0"
        - name: FLUENT_KAFKA_ACK_TIMEOUT
          value: "1500"
        resources:
          limits:
            memory: 1000Mi
          requests:
            memory: 200Mi
        volumeMounts:
        - name: varlog
          mountPath: "/var/log"
        - name: docker-containers
          mountPath: "/var/lib/docker/containers"
        - name: ssl-certs
          mountPath: "/etc/ssl/certs"
        terminationMessagePath: "/dev/termination-log"
        terminationMessagePolicy: File
        imagePullPolicy: IfNotPresent
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      securityContext: {}
      schedulerName: default-scheduler
      serviceAccount: logshuttle-fluentd
      serviceAccountName: logshuttle-fluentd
      tolerations:
      - key: role
        operator: Equal
        value: master
        effect: NoSchedule
  updateStrategy:
    type: OnDelete
  templateGeneration: 1
  revisionHistoryLimit: 10

apiVersion: v1
data:
  CLUSTER: {{.Values.name}}
  DEFAULT_DOMAIN: {{.Values.name}}.{{.Values.domain}}
  INSIDE_DOMAIN: {{.Values.name}}i.{{.Values.domain}}
  KUBERNETES_API_SERVER: {{.Values.kubernetesapiurl}}
  KUBERNETES_TOKEN: {{.Values.kubernetestoken}}
  NAMESPACE_BLACKLIST: kube-system,kube-public,quay-enterprise,subsystems,brokers,testcafe,akkeris-system,istio-system,nginx-ingress-i,prometheus,sites-system,velero
  REGIONAPI_PASSWORD: {{.Values.regionapipassword}}
  REGIONAPI_URL: {{.Values.regionapiurl}}
  REGIONAPI_URL: {{.Values.regionapiusername}}
kind: ConfigMap
metadata:
  name: service-watcher-istio
  namespace: akkeris-system
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    name: service-watcher-istio
  name: service-watcher-istio
  namespace: akkeris-system
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      name: service-watcher-istio
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: service-watcher-istio
        name: service-watcher-istio
      name: service-watcher-istio
    spec:
      containers:
      - env:
        - name: VAULT_ADDR
          valueFrom:
            secretKeyRef:
              key: VAULT_ADDR
              name: akkeris-system-vault
        - name: VAULT_TOKEN
          valueFrom:
            secretKeyRef:
              key: VAULT_TOKEN
              name: akkeris-system-vault
        envFrom:
        - configMapRef:
            name: service-watcher-istio
        image: akkeris/service-watcher-istio:v1.1.0
        imagePullPolicy: IfNotPresent
        name: service-watcher-istio
        ports:
        - containerPort: 3000
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30

# Default values for akkeris.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

serviceAccounts:
  akkeris:
    create: "true"
    name:

controller: 
  image:
    repository: akkeris/controller-api
    tag: stable
    pullPolicy: IfNotPresent

regionApi:
  ## region-api container name
  ##
  name: region-api

  ## region-api container image
  ##
  image:
    repository: akkeris/region-api
    tag: release-38
    pullPolicy: IfNotPresent

  ## region-api priorityClassName
  ##
  priorityClassName: ""
  
  ingress:
    ## If true, region-api Ingress will be created
    ##
    enabled: false

    ## region-api Ingress annotations
    ##
    annotations: {}
    #   kubernetes.io/ingress.class: nginx
    #   kubernetes.io/tls-acme: 'true'

    ## region-api Ingress hostnames with optional path
    ## Must be provided if Ingress is enabled
    ##
    hosts: []
    #  - region-api.domain.com

    tls: []
    #  - secretName: region-api-tls
    #    hosts:
    #      - region-api.domain.com

  ## region-api Deployment Strategy type
    strategy:
      rollingUpdate:
        maxSurge: 1
        maxUnavailable: 1
      type: RollingUpdate

  ## Node tolerations for region-api scheduling to nodes with taints
  ## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
  ##
  tolerations: []
    # - key: "key"
    #   operator: "Equal|Exists"
    #   value: "value"
    #   effect: "NoSchedule|PreferNoSchedule|NoExecute(1.6 only)"

  ## Node labels for region-api pod assignment
  ## Ref: https://kubernetes.io/docs/user-guide/node-selection/
  ##
  nodeSelector: {}

  ## Pod affinity
  ##
  affinity: {}

  ## Use an alternate scheduler, e.g. "stork".
  ## ref: https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/
  ##
  # schedulerName:

  ## Annotations to be added to region-api pods
  ##
  podAnnotations: {}
  
  replicaCount: 1

  ## region-api resource requests and limits
  ## Ref: http://kubernetes.io/docs/user-guide/compute-resources/
  ##
  resources: {}
    # limits:
    #   cpu: 10m
    #   memory: 32Mi
    # requests:
    #   cpu: 10m
    #   memory: 32Mi

  ## Security context to be added to region-api pods
  ##
  securityContext: {}

  service:
    annotations: {}
    labels: {}
    clusterIP: ""

    ## List of IP addresses at which the region-api service is available
    ## Ref: https://kubernetes.io/docs/user-guide/services/#external-ips
    ##
    externalIPs: []

    servicePort: 80
    # nodePort: 30000
    type: nodePort

logsession:
  ## logsession container name
  ##
  name: logsession

  ## logsession container image
  ##
  image:
    repository: akkeris/logsession
    tag: release-38
    pullPolicy: IfNotPresent

  ## logsession priorityClassName
  ##
  priorityClassName: ""
  
  ingress:
    ## If true, logsession Ingress will be created
    ##
    enabled: false

    ## logsession Ingress annotations
    ##
    annotations: {}
    #   kubernetes.io/ingress.class: nginx
    #   kubernetes.io/tls-acme: 'true'

    ## logsession Ingress hostnames with optional path
    ## Must be provided if Ingress is enabled
    ##
    hosts: []
    #  - logsession.domain.com

    tls: []
    #  - secretName: logsession-tls
    #    hosts:
    #      - logsession.domain.com

  ## logsession Deployment Strategy type
    strategy:
      rollingUpdate:
        maxSurge: 1
        maxUnavailable: 1
      type: RollingUpdate

  ## Node tolerations for logsession scheduling to nodes with taints
  ## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
  ##
  tolerations: []
    # - key: "key"
    #   operator: "Equal|Exists"
    #   value: "value"
    #   effect: "NoSchedule|PreferNoSchedule|NoExecute(1.6 only)"

  ## Node labels for logsession pod assignment
  ## Ref: https://kubernetes.io/docs/user-guide/node-selection/
  ##
  nodeSelector: {}

  ## Pod affinity
  ##
  affinity: {}

  ## Use an alternate scheduler, e.g. "stork".
  ## ref: https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/
  ##
  # schedulerName:

  ## Annotations to be added to logsession pods
  ##
  podAnnotations: {}
  
  replicaCount: 1

  ## logsession resource requests and limits
  ## Ref: http://kubernetes.io/docs/user-guide/compute-resources/
  ##
  resources: {}
    # limits:
    #   cpu: 10m
    #   memory: 32Mi
    # requests:
    #   cpu: 10m
    #   memory: 32Mi

  ## Security context to be added to logsession pods
  ##
  securityContext: {}

  service:
    annotations: {}
    labels: {}
    clusterIP: ""

    ## List of IP addresses at which the logsession service is available
    ## Ref: https://kubernetes.io/docs/user-guide/services/#external-ips
    ##
    externalIPs: []

    servicePort: 80
    # nodePort: 30000
    type: nodePort

buildshuttle:
  ## buildshuttle container name
  ##
  name: buildshuttle

  ## buildshuttle container image
  ##
  image:
    repository: akkeris/buildshuttle
    tag: release-72
    pullPolicy: IfNotPresent

  ## Additional alertmanager container environment variable
  ## For instance to add a http_proxy
  ##
  extraEnv: 
    - DEBUG: buildshuttle,buildshuttle-worker
    - PORT: 9000
    - MAXIMUM_PARALLEL_BUILDS: 4
    - DOCKER_BUILD_SETTINGS: {}

  ## buildshuttle priorityClassName
  ##
  priorityClassName: ""
  
  ingress:
    ## If true, buildshuttle Ingress will be created
    ##
    enabled: false

    ## buildshuttle Ingress annotations
    ##
    annotations: {}
    #   kubernetes.io/ingress.class: nginx
    #   kubernetes.io/tls-acme: 'true'

    ## buildshuttle Ingress hostnames with optional path
    ## Must be provided if Ingress is enabled
    ##
    hosts: []
    #  - buildshuttle.domain.com

    tls: []
    #  - secretName: buildshuttle-tls
    #    hosts:
    #      - buildshuttle.domain.com

  ## buildshuttle Deployment Strategy type
    strategy:
      rollingUpdate:
        maxSurge: 1
        maxUnavailable: 0
      type: RollingUpdate

  ## Node tolerations for buildshuttle scheduling to nodes with taints
  ## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
  ##
  tolerations: []
    # - key: "key"
    #   operator: "Equal|Exists"
    #   value: "value"
    #   effect: "NoSchedule|PreferNoSchedule|NoExecute(1.6 only)"

  ## Node labels for buildshuttle pod assignment
  ## Ref: https://kubernetes.io/docs/user-guide/node-selection/
  ##
  nodeSelector: {}

  ## Pod affinity
  ##
  affinity:
    nodeAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
      - preference:
          matchExpressions:
          - key: akkeris.io/node-role
            operator: In
            values:
            - build
        weight: 1

  ## Use an alternate scheduler, e.g. "stork".
  ## ref: https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/
  ##
  # schedulerName:

  ## Annotations to be added to buildshuttle pods
  ##
  podAnnotations: {}
  
  replicaCount: 1

  ## buildshuttle resource requests and limits
  ## Ref: http://kubernetes.io/docs/user-guide/compute-resources/
  ##
  resources: {}
    # limits:
    #   cpu: 10m
    #   memory: 32Mi
    # requests:
    #   cpu: 10m
    #   memory: 32Mi

  ## Security context to be added to buildshuttle pods
  ##
  securityContext:
    capabilities: {}
    privileged: true

  service:
    annotations: {}
    labels: {}
    clusterIP: ""

    ## List of IP addresses at which the buildshuttle service is available
    ## Ref: https://kubernetes.io/docs/user-guide/services/#external-ips
    ##
    externalIPs: []

    servicePort: 80
    # nodePort: 30000
    type: nodePort

databaseBroker:
  ## database-broker container name
  ##
  name: database-broker

  ## database-broker container image
  ##
  image:
    repository: akkeris/database-broker
    tag: release-38
    pullPolicy: IfNotPresent
  
  worker:
    name: database-broker-worker

  ## database-broker priorityClassName
  ##
  priorityClassName: ""
  
  ingress:
    ## If true, database-broker Ingress will be created
    ##
    enabled: false

    ## database-broker Ingress annotations
    ##
    annotations: {}
    #   kubernetes.io/ingress.class: nginx
    #   kubernetes.io/tls-acme: 'true'

    ## database-broker Ingress hostnames with optional path
    ## Must be provided if Ingress is enabled
    ##
    hosts: []
    #  - database-broker.domain.com

    tls: []
    #  - secretName: database-broker-tls
    #    hosts:
    #      - database-broker.domain.com

  ## database-broker Deployment Strategy type
    strategy:
      rollingUpdate:
        maxSurge: 1
        maxUnavailable: 1
      type: RollingUpdate

  ## Node tolerations for database-broker scheduling to nodes with taints
  ## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
  ##
  tolerations: []
    # - key: "key"
    #   operator: "Equal|Exists"
    #   value: "value"
    #   effect: "NoSchedule|PreferNoSchedule|NoExecute(1.6 only)"

  ## Node labels for database-broker pod assignment
  ## Ref: https://kubernetes.io/docs/user-guide/node-selection/
  ##
  nodeSelector: {}

  ## Pod affinity
  ##
  affinity: {}

  ## Use an alternate scheduler, e.g. "stork".
  ## ref: https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/
  ##
  # schedulerName:

  ## Annotations to be added to database-broker pods
  ##
  podAnnotations: {}
  
  replicaCount: 1

  ## database-broker resource requests and limits
  ## Ref: http://kubernetes.io/docs/user-guide/compute-resources/
  ##
  resources: {}
    # limits:
    #   cpu: 10m
    #   memory: 32Mi
    # requests:
    #   cpu: 10m
    #   memory: 32Mi

  ## Security context to be added to database-broker pods
  ##
  securityContext: {}

  service:
    annotations: {}
    labels: {}
    clusterIP: ""

    ## List of IP addresses at which the database-broker service is available
    ## Ref: https://kubernetes.io/docs/user-guide/services/#external-ips
    ##
    externalIPs: []

    servicePort: 80
    # nodePort: 30000
    type: nodePort

  logshuttle:
  ## logshuttle container name
  ##
  name: logshuttle

  ## logshuttle container image
  ##
  image:
    repository: akkeris/logshuttle
    tag: release-9
    pullPolicy: IfNotPresent

  ## logshuttle priorityClassName
  ##
  priorityClassName: ""
  
  ingress:
    ## If true, logshuttle Ingress will be created
    ##
    enabled: false

    ## logshuttle Ingress annotations
    ##
    annotations: {}
    #   kubernetes.io/ingress.class: nginx
    #   kubernetes.io/tls-acme: 'true'

    ## logshuttle Ingress hostnames with optional path
    ## Must be provided if Ingress is enabled
    ##
    hosts: []
    #  - logshuttle.domain.com

    tls: []
    #  - secretName: logshuttle-tls
    #    hosts:
    #      - logshuttle.domain.com

  ## logshuttle Deployment Strategy type
    strategy:
      rollingUpdate:
        maxSurge: 1
        maxUnavailable: 1
      type: RollingUpdate

  ## Node tolerations for logshuttle scheduling to nodes with taints
  ## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
  ##
  tolerations: []
    # - key: "key"
    #   operator: "Equal|Exists"
    #   value: "value"
    #   effect: "NoSchedule|PreferNoSchedule|NoExecute(1.6 only)"

  ## Node labels for logshuttle pod assignment
  ## Ref: https://kubernetes.io/docs/user-guide/node-selection/
  ##
  nodeSelector: {}

  ## Pod affinity
  ##
  affinity: {}

  ## Use an alternate scheduler, e.g. "stork".
  ## ref: https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/
  ##
  # schedulerName:

  ## Annotations to be added to logshuttle pods
  ##
  podAnnotations: {}
  
  replicaCount: 1

  ## logshuttle resource requests and limits
  ## Ref: http://kubernetes.io/docs/user-guide/compute-resources/
  ##
  resources: {}
    # limits:
    #   cpu: 10m
    #   memory: 32Mi
    # requests:
    #   cpu: 10m
    #   memory: 32Mi

  ## Security context to be added to logshuttle pods
  ##
  securityContext: {}

  service:
    annotations: {}
    labels: {}
    clusterIP: ""

    ## List of IP addresses at which the logshuttle service is available
    ## Ref: https://kubernetes.io/docs/user-guide/services/#external-ips
    ##
    externalIPs: []

    servicePort: 80
    # nodePort: 30000
    type: nodePort
# Default values for akkeris.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
rbac:
  create: true
  
serviceAccounts:
  akkeris:
    create: "true"
    name: akkeris

## TODO
## Conglomorate common env vars here and add to templates
aws:
  accessKeyID:
  secretAccessKey:
  region: us-west-2
  securityGroups:
  accountID:
  kmsKeyID:
  subnetID: []

akkeris:
  prefix: akkeris

vault:
  address: vault.akkeris-system.svc.cluster.local
  token:

kubernetes:
  api: kubernetes.default.svc.cluster.local

appsWatcher:
  ## apps-watcher container name
  ##
  name: apps-watcher

  ## apps-watcher container image
  ##
  image:
    repository: akkeris/apps-watcher
    tag: release-12
    pullPolicy: IfNotPresent

  ## apps-watcher priorityClassName
  ##
  priorityClassName: ""
  
  ## apps-watcher Deployment Strategy type
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate

  ## Node tolerations for apps-watcher scheduling to nodes with taints
  ## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
  ##
  tolerations: []
    # - key: "key"
    #   operator: "Equal|Exists"
    #   value: "value"
    #   effect: "NoSchedule|PreferNoSchedule|NoExecute(1.6 only)"

  ## Node labels for apps-watcher pod assignment
  ## Ref: https://kubernetes.io/docs/user-guide/node-selection/
  ##
  nodeSelector: {}

  ## Pod affinity
  ##
  affinity: {}

  ## Use an alternate scheduler, e.g. "stork".
  ## ref: https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/
  ##
  # schedulerName:

  ## Annotations to be added to apps-watcher pods
  ##
  podAnnotations: {}
  
  replicaCount: 1

  ## apps-watcher resource requests and limits
  ## Ref: http://kubernetes.io/docs/user-guide/compute-resources/
  ##
  resources: {}
    # limits:
    #   cpu: 10m
    #   memory: 32Mi
    # requests:
    #   cpu: 10m
    #   memory: 32Mi

  ## Security context to be added to apps-watcher pods
  ##
  securityContext: {}

  configmap:
    data:
      KUBERNETES_API_SERVER: kubernetes.default.svc.cluster.local
      KUBERNETES_API_VERSION: v1
      KUBERNETES_TOKEN_SECRET:
      NOTIFY:

buildshuttle:
  ## buildshuttle container name
  ##
  name: buildshuttle

  ## buildshuttle container image
  ##
  image:
    repository: akkeris/buildshuttle
    tag: release-72
    pullPolicy: IfNotPresent

  ## Additional alertmanager container environment variable
  ## For instance to add a http_proxy
  ##
  extraEnv: 
    DEBUG: buildshuttle,buildshuttle-worker
    MAXIMUM_PARALLEL_BUILDS: 4
    DOCKER_BUILD_SETTINGS:
    USE_KUBERNETES: true

  ## buildshuttle priorityClassName
  ##
  priorityClassName: ""
  
  ingress:
    ## If true, buildshuttle Ingress will be created
    ##
    enabled: false

    ## buildshuttle Ingress annotations
    ##
    annotations: {}
    #   kubernetes.io/ingress.class: nginx
    #   kubernetes.io/tls-acme: 'true'

    ## buildshuttle Ingress hostnames with optional path
    ## Must be provided if Ingress is enabled
    ##
    hosts: []
    #  - buildshuttle.domain.com

    tls: []
    #  - secretName: buildshuttle-tls
    #    hosts:
    #      - buildshuttle.domain.com

  ## buildshuttle Deployment Strategy type
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate

  ## Node tolerations for buildshuttle scheduling to nodes with taints
  ## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
  ##
  tolerations: []
    # - key: "key"
    #   operator: "Equal|Exists"
    #   value: "value"
    #   effect: "NoSchedule|PreferNoSchedule|NoExecute(1.6 only)"

  ## Node labels for buildshuttle pod assignment
  ## Ref: https://kubernetes.io/docs/user-guide/node-selection/
  ##
  nodeSelector: {}

  ## Pod affinity
  ##
  affinity:
    nodeAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
      - preference:
          matchExpressions:
          - key: akkeris.io/node-role
            operator: In
            values:
            - build
        weight: 1

  ## Use an alternate scheduler, e.g. "stork".
  ## ref: https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/
  ##
  # schedulerName:

  ## Annotations to be added to buildshuttle pods
  ##
  podAnnotations: {}
  
  replicaCount: 1

  ## buildshuttle resource requests and limits
  ## Ref: http://kubernetes.io/docs/user-guide/compute-resources/
  ##
  resources: {}
    # limits:
    #   cpu: 10m
    #   memory: 32Mi
    # requests:
    #   cpu: 10m
    #   memory: 32Mi

  ## Security context to be added to buildshuttle pods
  ##
  securityContext:
    capabilities: {}
    privileged: true

  service:
    annotations: {}
    labels: {}
    clusterIP: ""

    ## List of IP addresses at which the buildshuttle service is available
    ## Ref: https://kubernetes.io/docs/user-guide/services/#external-ips
    ##
    externalIPs: []

    servicePort: 80
    # nodePort: 30000
    type: nodePort

  configmap:
    data:
      S3_ACCESS_KEY:
      S3_BUCKET:
      S3_LOCATION:
      S3_REGION: us-west-2
      S3_SECRET_KEY:

databaseBroker:
  enabled: true
  ## database-broker container name
  ##
  name: database-broker

  ## database-broker container image
  ##
  image:
    repository: akkeris/database-broker
    tag: release-38
    pullPolicy: IfNotPresent
  
  worker:
    name: database-broker-worker
    resources: {}
      # limits:
      #   cpu: 10m
      #   memory: 32Mi
      # requests:
      #   cpu: 10m
      #   memory: 32Mi

  ## database-broker priorityClassName
  ##
  priorityClassName: ""
  
  ingress:
    ## If true, database-broker Ingress will be created
    ##
    enabled: false

    ## database-broker Ingress annotations
    ##
    annotations: {}
    #   kubernetes.io/ingress.class: nginx
    #   kubernetes.io/tls-acme: 'true'

    ## database-broker Ingress hostnames with optional path
    ## Must be provided if Ingress is enabled
    ##
    hosts: []
    #  - database-broker.domain.com

    tls: []
    #  - secretName: database-broker-tls
    #    hosts:
    #      - database-broker.domain.com

  ## database-broker Deployment Strategy type
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate

  ## Node tolerations for database-broker scheduling to nodes with taints
  ## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
  ##
  tolerations: []
    # - key: "key"
    #   operator: "Equal|Exists"
    #   value: "value"
    #   effect: "NoSchedule|PreferNoSchedule|NoExecute(1.6 only)"

  ## Node labels for database-broker pod assignment
  ## Ref: https://kubernetes.io/docs/user-guide/node-selection/
  ##
  nodeSelector: {}

  ## Pod affinity
  ##
  affinity: {}

  ## Use an alternate scheduler, e.g. "stork".
  ## ref: https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/
  ##
  # schedulerName:

  ## Annotations to be added to database-broker pods
  ##
  podAnnotations: {}
  
  replicaCount: 1

  ## database-broker resource requests and limits
  ## Ref: http://kubernetes.io/docs/user-guide/compute-resources/
  ##
  resources: {}
    # limits:
    #   cpu: 10m
    #   memory: 32Mi
    # requests:
    #   cpu: 10m
    #   memory: 32Mi

  ## Security context to be added to database-broker pods
  ##
  securityContext: {}

  service:
    annotations: {}
    labels: {}
    clusterIP: ""

    ## List of IP addresses at which the database-broker service is available
    ## Ref: https://kubernetes.io/docs/user-guide/services/#external-ips
    ##
    externalIPs: []

    servicePort: 80
    # nodePort: 30000
    type: nodePort

  configmap:
    data:
      AWS_REGION: us-west-2
      AWS_VPC_SECURITY_GROUPS:
      DATABASE_URL:
      NAME_PREFIX: akkeris
      PG_HOBBY_9_URI:
      PG_HOBBY_10_URI:

elasticacheBroker:
  enabled: true
  ## elasticache-broker container name
  ##
  name: elasticache-broker

  ## elasticache-broker container image
  ##
  image:
    repository: akkeris/elasticache-broker
    tag: release-6
    pullPolicy: IfNotPresent
  
  worker:
    name: elasticache-broker-worker
    resources: {}
      # limits:
      #   cpu: 10m
      #   memory: 32Mi
      # requests:
      #   cpu: 10m
      #   memory: 32Mi

  ## elasticache-broker priorityClassName
  ##
  priorityClassName: ""
  
  ingress:
    ## If true, elasticache-broker Ingress will be created
    ##
    enabled: false

    ## elasticache-broker Ingress annotations
    ##
    annotations: {}
    #   kubernetes.io/ingress.class: nginx
    #   kubernetes.io/tls-acme: 'true'

    ## elasticache-broker Ingress hostnames with optional path
    ## Must be provided if Ingress is enabled
    ##
    hosts: []
    #  - elasticache-broker.domain.com

    tls: []
    #  - secretName: elasticache-broker-tls
    #    hosts:
    #      - elasticache-broker.domain.com

  ## elasticache-broker Deployment Strategy type
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate

  ## Node tolerations for elasticache-broker scheduling to nodes with taints
  ## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
  ##
  tolerations: []
    # - key: "key"
    #   operator: "Equal|Exists"
    #   value: "value"
    #   effect: "NoSchedule|PreferNoSchedule|NoExecute(1.6 only)"

  ## Node labels for elasticache-broker pod assignment
  ## Ref: https://kubernetes.io/docs/user-guide/node-selection/
  ##
  nodeSelector: {}

  ## Pod affinity
  ##
  affinity: {}

  ## Use an alternate scheduler, e.g. "stork".
  ## ref: https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/
  ##
  # schedulerName:

  ## Annotations to be added to elasticache-broker pods
  ##
  podAnnotations: {}
  
  replicaCount: 1

  ## elasticache-broker resource requests and limits
  ## Ref: http://kubernetes.io/docs/user-guide/compute-resources/
  ##
  resources: {}
    # limits:
    #   cpu: 10m
    #   memory: 32Mi
    # requests:
    #   cpu: 10m
    #   memory: 32Mi

  ## Security context to be added to elasticache-broker pods
  ##
  securityContext: {}

  service:
    annotations: {}
    labels: {}
    clusterIP: ""

    ## List of IP addresses at which the elasticache-broker service is available
    ## Ref: https://kubernetes.io/docs/user-guide/services/#external-ips
    ##
    externalIPs: []

    servicePort: 80
    # nodePort: 30000
    type: nodePort

  configmap:
    data:
      AWS_REGION: us-west-2
      AWS_VPC_SECURITY_GROUPS:
      ELASTICACHE_SECURITY_GROUP:
      DATABASE_URL:
      MEMCACHED_SUBNET_GROUP: memcached-subnet-group
      NAME_PREFIX: akkeris
      REDIS_SUBNET_GROUP: redis_subnet_group

elasticsearchBroker:
  enabled: true
  ## elasticsearch-broker container name
  ##
  name: elasticsearch-broker

  ## elasticsearch-broker container image
  ##
  image:
    repository: akkeris/elasticsearch-broker
    tag: release-2
    pullPolicy: IfNotPresent
  
  worker:
    name: elasticsearch-broker-worker
    resources: {}
      # limits:
      #   cpu: 10m
      #   memory: 32Mi
      # requests:
      #   cpu: 10m
      #   memory: 32Mi

  ## elasticsearch-broker priorityClassName
  ##
  priorityClassName: ""

  ## elasticsearch-broker Deployment Strategy type
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate

  ## Node tolerations for elasticsearch-broker scheduling to nodes with taints
  ## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
  ##
  tolerations: []
    # - key: "key"
    #   operator: "Equal|Exists"
    #   value: "value"
    #   effect: "NoSchedule|PreferNoSchedule|NoExecute(1.6 only)"

  ## Node labels for elasticsearch-broker pod assignment
  ## Ref: https://kubernetes.io/docs/user-guide/node-selection/
  ##
  nodeSelector: {}

  ## Pod affinity
  ##
  affinity: {}

  ## Use an alternate scheduler, e.g. "stork".
  ## ref: https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/
  ##
  # schedulerName:

  ## Annotations to be added to elasticsearch-broker pods
  ##
  podAnnotations: {}
  
  replicaCount: 1

  ## elasticsearch-broker resource requests and limits
  ## Ref: http://kubernetes.io/docs/user-guide/compute-resources/
  ##
  resources: {}
    # limits:
    #   cpu: 10m
    #   memory: 32Mi
    # requests:
    #   cpu: 10m
    #   memory: 32Mi

  ## Security context to be added to elasticsearch-broker pods
  ##
  securityContext: {}

  service:
    annotations: {}
    labels: {}
    clusterIP: ""

    ## List of IP addresses at which the elasticsearch-broker service is available
    ## Ref: https://kubernetes.io/docs/user-guide/services/#external-ips
    ##
    externalIPs: []

    servicePort: 80
    # nodePort: 30000
    type: nodePort

  configmap:
    data:
      AWS_ACCOUNT_ID:
      AWS_KMS_KEY_ID:
      AWS_SUBNET_ID:
      AWS_SECURITY_GROUP_ID:
      DATABASE_URL:
      NAME_PREFIX: akkeris

logsession:
  ## logsession container name
  ##
  name: logsession

  ## logsession container image
  ##
  image:
    repository: akkeris/logsession
    tag: release-38
    pullPolicy: IfNotPresent

  ## logsession priorityClassName
  ##
  priorityClassName: ""
  
  ingress:
    ## If true, logsession Ingress will be created
    ##
    enabled: false

    ## logsession Ingress annotations
    ##
    annotations: {}
    #   kubernetes.io/ingress.class: nginx
    #   kubernetes.io/tls-acme: 'true'

    ## logsession Ingress hostnames with optional path
    ## Must be provided if Ingress is enabled
    ##
    hosts: []
    #  - logsession.domain.com

    tls: []
    #  - secretName: logsession-tls
    #    hosts:
    #      - logsession.domain.com

  ## logsession Deployment Strategy type
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate

  ## Node tolerations for logsession scheduling to nodes with taints
  ## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
  ##
  tolerations: []
    # - key: "key"
    #   operator: "Equal|Exists"
    #   value: "value"
    #   effect: "NoSchedule|PreferNoSchedule|NoExecute(1.6 only)"

  ## Node labels for logsession pod assignment
  ## Ref: https://kubernetes.io/docs/user-guide/node-selection/
  ##
  nodeSelector: {}

  ## Pod affinity
  ##
  affinity: {}

  ## Use an alternate scheduler, e.g. "stork".
  ## ref: https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/
  ##
  # schedulerName:

  ## Annotations to be added to logsession pods
  ##
  podAnnotations: {}
  
  replicaCount: 1

  ## logsession resource requests and limits
  ## Ref: http://kubernetes.io/docs/user-guide/compute-resources/
  ##
  resources: {}
    # limits:
    #   cpu: 10m
    #   memory: 32Mi
    # requests:
    #   cpu: 10m
    #   memory: 32Mi

  ## Security context to be added to logsession pods
  ##
  securityContext: {}

  service:
    annotations: {}
    labels: {}
    clusterIP: ""

    ## List of IP addresses at which the logsession service is available
    ## Ref: https://kubernetes.io/docs/user-guide/services/#external-ips
    ##
    externalIPs: []

    servicePort: 80
    # nodePort: 30000
    type: nodePort
  
  configmap:
    data:
      AUTH_KEY:
      KAFKA_HOSTS:
      POSTGRES_URL:
      RUN_SESSION: 1
      SESSION_URL:
      SYSLOG:

logshuttle:
  ## logshuttle container name
  ##
  name: logshuttle

  ## logshuttle container image
  ##
  image:
    repository: akkeris/logshuttle
    tag: release-9
    pullPolicy: IfNotPresent

  ## logshuttle priorityClassName
  ##
  priorityClassName: ""
  
  ingress:
    ## If true, logshuttle Ingress will be created
    ##
    enabled: false

    ## logshuttle Ingress annotations
    ##
    annotations: {}
    #   kubernetes.io/ingress.class: nginx
    #   kubernetes.io/tls-acme: 'true'

    ## logshuttle Ingress hostnames with optional path
    ## Must be provided if Ingress is enabled
    ##
    hosts: []
    #  - logshuttle.domain.com

    tls: []
    #  - secretName: logshuttle-tls
    #    hosts:
    #      - logshuttle.domain.com

  ## logshuttle Deployment Strategy type
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate

  ## Node tolerations for logshuttle scheduling to nodes with taints
  ## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
  ##
  tolerations: []
    # - key: "key"
    #   operator: "Equal|Exists"
    #   value: "value"
    #   effect: "NoSchedule|PreferNoSchedule|NoExecute(1.6 only)"

  ## Node labels for logshuttle pod assignment
  ## Ref: https://kubernetes.io/docs/user-guide/node-selection/
  ##
  nodeSelector: {}

  ## Pod affinity
  ##
  affinity: {}

  ## Use an alternate scheduler, e.g. "stork".
  ## ref: https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/
  ##
  # schedulerName:

  ## Annotations to be added to logshuttle pods
  ##
  podAnnotations: {}
  
  replicaCount: 1

  ## logshuttle resource requests and limits
  ## Ref: http://kubernetes.io/docs/user-guide/compute-resources/
  ##
  resources: {}
    # limits:
    #   cpu: 10m
    #   memory: 32Mi
    # requests:
    #   cpu: 10m
    #   memory: 32Mi

  ## Security context to be added to logshuttle pods
  ##
  securityContext: {}

  service:
    annotations: {}
    labels: {}
    clusterIP: ""

    ## List of IP addresses at which the logshuttle service is available
    ## Ref: https://kubernetes.io/docs/user-guide/services/#external-ips
    ##
    externalIPs: []

    servicePort: 80
    # nodePort: 30000
    type: nodePort

  configmap:
    data:
      AUTH_KEY:
      KAFKA_HOSTS:
      POSTGS_URL:
      SYSLOG:

metricsSample:
  ## metrics-sample container name
  ##
  name: metrics-sample

  ## metrics-sample container image
  ##
  image:
    repository: akkeris/metrics-sample
    tag: release-3
    pullPolicy: IfNotPresent

  ## metrics-sample priorityClassName
  ##
  priorityClassName: ""
  
  ## metrics-sample Deployment Strategy type
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate

  ## Node tolerations for metrics-sample scheduling to nodes with taints
  ## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
  ##
  tolerations: []
    # - key: "key"
    #   operator: "Equal|Exists"
    #   value: "value"
    #   effect: "NoSchedule|PreferNoSchedule|NoExecute(1.6 only)"

  ## Node labels for metrics-sample pod assignment
  ## Ref: https://kubernetes.io/docs/user-guide/node-selection/
  ##
  nodeSelector: {}

  ## Pod affinity
  ##
  affinity: {}

  ## Use an alternate scheduler, e.g. "stork".
  ## ref: https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/
  ##
  # schedulerName:

  ## Annotations to be added to metrics-sample pods
  ##
  podAnnotations: {}
  
  replicaCount: 1

  ## metrics-sample resource requests and limits
  ## Ref: http://kubernetes.io/docs/user-guide/compute-resources/
  ##
  resources: {}
    # limits:
    #   cpu: 10m
    #   memory: 32Mi
    # requests:
    #   cpu: 10m
    #   memory: 32Mi

  ## Security context to be added to metrics-sample pods
  ##
  securityContext: {}

  configmap:
    data:
      ALAMO_API_URL:
      DELAY_MINUTES: "9"
      KAFKA_BROKERS:
      PROFILE: false
      PROMETHEUS_URL: prometheus-server.prometheus.svc.cluster.local

metricsSyslogCollector:
  ## metrics-syslog-collector container name
  ##
  name: metrics-syslog-collector

  ## metrics-syslog-collector container image
  ##
  image:
    repository: akkeris/metrics-syslog-collector
    tag: pre-release-2
    pullPolicy: IfNotPresent

  ## metrics-syslog-collector priorityClassName
  ##
  priorityClassName: ""

  ## metrics-syslog-collector Deployment Strategy type
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate

  ## Node tolerations for metrics-syslog-collector scheduling to nodes with taints
  ## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
  ##
  tolerations: []
    # - key: "key"
    #   operator: "Equal|Exists"
    #   value: "value"
    #   effect: "NoSchedule|PreferNoSchedule|NoExecute(1.6 only)"

  ## Node labels for metrics-syslog-collector pod assignment
  ## Ref: https://kubernetes.io/docs/user-guide/node-selection/
  ##
  nodeSelector: {}

  ## Pod affinity
  ##
  affinity: {}

  ## Use an alternate scheduler, e.g. "stork".
  ## ref: https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/
  ##
  # schedulerName:

  ## Annotations to be added to metrics-syslog-collector pods
  ##
  podAnnotations: {}
  
  replicaCount: 1

  ## metrics-syslog-collector resource requests and limits
  ## Ref: http://kubernetes.io/docs/user-guide/compute-resources/
  ##
  resources: {}
    # limits:
    #   cpu: 10m
    #   memory: 32Mi
    # requests:
    #   cpu: 10m
    #   memory: 32Mi

  ## Security context to be added to metrics-syslog-collector pods
  ##
  securityContext: {}

  service:
    annotations: {}
    labels: {}
    clusterIP: ""

    ## List of IP addresses at which the logsession service is available
    ## Ref: https://kubernetes.io/docs/user-guide/services/#external-ips
    ##
    externalIPs: []

    servicePort: 80
    # nodePort: 30000
    type: nodePort

  configmap:
    data:
      OPENTSDB_IP:

regionApi:
  ## region-api container name
  ##
  name: region-api

  ## region-api container image
  ##
  image:
    repository: akkeris/region-api
    tag: release-38
    pullPolicy: IfNotPresent

  ## region-api priorityClassName
  ##
  priorityClassName: ""
  
  ingress:
    ## If true, region-api Ingress will be created
    ##
    enabled: false

    ## region-api Ingress annotations
    ##
    annotations: {}
    #   kubernetes.io/ingress.class: nginx
    #   kubernetes.io/tls-acme: 'true'

    ## region-api Ingress hostnames with optional path
    ## Must be provided if Ingress is enabled
    ##
    hosts: []
    #  - region-api.domain.com

    tls: []
    #  - secretName: region-api-tls
    #    hosts:
    #      - region-api.domain.com

  ## region-api Deployment Strategy type
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate

  ## Node tolerations for region-api scheduling to nodes with taints
  ## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
  ##
  tolerations: []
    # - key: "key"
    #   operator: "Equal|Exists"
    #   value: "value"
    #   effect: "NoSchedule|PreferNoSchedule|NoExecute(1.6 only)"

  ## Node labels for region-api pod assignment
  ## Ref: https://kubernetes.io/docs/user-guide/node-selection/
  ##
  nodeSelector: {}

  ## Pod affinity
  ##
  affinity: {}

  ## Use an alternate scheduler, e.g. "stork".
  ## ref: https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/
  ##
  # schedulerName:

  ## Annotations to be added to region-api pods
  ##
  podAnnotations: {}
  
  replicaCount: 1

  ## region-api resource requests and limits
  ## Ref: http://kubernetes.io/docs/user-guide/compute-resources/
  ##
  resources: {}
    # limits:
    #   cpu: 10m
    #   memory: 32Mi
    # requests:
    #   cpu: 10m
    #   memory: 32Mi

  ## Security context to be added to region-api pods
  ##
  securityContext: {}

  service:
    annotations: {}
    labels: {}
    clusterIP: ""

    ## List of IP addresses at which the region-api service is available
    ## Ref: https://kubernetes.io/docs/user-guide/services/#external-ips
    ##
    externalIPs: []

    servicePort: 80
    # nodePort: 30000
    type: nodePort
  
  configmap:
    data:
      ALAMO_API_AUTH_SECRET: 
      ALAMO_INTERNAL_URL_TEMPLATE: 
      ALAMO_URL_TEMPLATE: 
      APPS_PRIVATE_INTERNAL: 
      APPS_PUBLIC_EXTERNAL: 
      APPS_PUBLIC_INTERNAL: 
      CASSANDRA_BROKER_URL: cassandra-api.akkeris-system.svc.cluster.local
      CERT_COUNTRY: US
      CERT_EMAIL: 
      CERT_LOCALITY: 
      CERT_ORG: 
      CERT_ORG_UNIT: 
      CERT_PROVINCE: 
      CERT_VALIDITY_YEARS: "2"
      DEFAULT_TRANSITION_INGRESS:
      DIGICERT_REQUEST_URL: 
      DIGICERT_SECRET: 
      DIGICERT_URL: https://www.digicert.com/services/v2
      DOMAIN_NAME: 
      ENABLE_AUTH: "false"
      ES_BROKER_URL: elasticsearch-api.akkeris-system.svc.cluster.local
      EXTERNAL_DOMAIN: 
      F5_SECRET: 
      F5_UNIPOOL: 
      F5_URL: 
      FEATURE_DEFAULT_OCTHC: "false"
      FEATURE_DEFAULT_OPSGENIE: "false"
      IMAGE_PULL_SECRET: 
      INFLUXDB_BROKER_URL: influx-api.akkeris-system.svc.cluster.local
      INFLUXDB_URL: 
      INGRESS_DEBUG: "true"
      INTERNAL_DOMAIN: 
      ISTIO_DOWNPAGE: akkeris404.default.svc.cluster.local
      KAFKA_BROKER_URL: http://kafka-api.akkeris-system.svc.cluster.local
      KAFKA_BROKERS: 
      LOGSHUTTLE_APP: logshuttle
      LOGSHUTTLE_RESTART: "false"
      LOGSHUTTLE_SPACE: default
      MARTINI_ENV: Prod
      MEMCACHED_BROKER_URL: memcached-api.akkeris-system.svc.cluster.local
      MONGODB_BROKER_URL: mongodb-api.akkeris-system.svc.cluster.local
      NAGIOS_ADDRESS: 
      NEPTUNE_BROKER_URL: neptune-api.akkeris-system.svc.cluster.local
      PITDB: 
      PORT: "3600"
      PROMETHEUS_URL: http://prometheus-server.prometheus
      RABBITMQ_BROKER_URL: rabbitmq-api.akkeris-system.svc.cluster.local
      REDIS_BROKER_URL: redis-api.akkeris-system.svc.cluster.local
      REVISION_HISTORY_LIMIT: "10"
      S3_BROKER_URL: s3-api.akkeris-system.svc.cluster.local
      SECRETS: 
      SERVICES: http://database-broker-api.akkeris-system,http://elasticache-broker-api.akkeris-system,http://s3-broker-api.akkeris-system,http://elasticsearch-broker-api.akkeris-system
      SITES_PRIVATE_INTERNAL: 
      SITES_PUBLIC_EXTERNAL: 
      SITES_PUBLIC_INTERNAL: 
      SSLPROFILEPARENT: /Common/clientssl_secured_V2
      SUBSCRIPTION_URL: 
      VAULT_CERT_STORAGE: secret/tmp/
      VAULT_PREFIX: vault

routerMetrics:
  ## router-metrics container name
  ##
  name: router-metrics

  ## router-metrics container image
  ##
  image:
    repository: akkeris/router-metrics
    tag: release-5
    pullPolicy: IfNotPresent

  ## router-metrics priorityClassName
  ##
  priorityClassName: ""
  
  ## router-metrics Deployment Strategy type
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate

  ## Node tolerations for router-metrics scheduling to nodes with taints
  ## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
  ##
  tolerations: []
    # - key: "key"
    #   operator: "Equal|Exists"
    #   value: "value"
    #   effect: "NoSchedule|PreferNoSchedule|NoExecute(1.6 only)"

  ## Node labels for router-metrics pod assignment
  ## Ref: https://kubernetes.io/docs/user-guide/node-selection/
  ##
  nodeSelector: {}

  ## Pod affinity
  ##
  affinity: {}

  ## Use an alternate scheduler, e.g. "stork".
  ## ref: https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/
  ##
  # schedulerName:

  ## Annotations to be added to router-metrics pods
  ##
  podAnnotations: {}
  
  replicaCount: 1

  ## router-metrics resource requests and limits
  ## Ref: http://kubernetes.io/docs/user-guide/compute-resources/
  ##
  resources: {}
    # limits:
    #   cpu: 10m
    #   memory: 32Mi
    # requests:
    #   cpu: 10m
    #   memory: 32Mi

  ## Security context to be added to router-metrics pods
  ##
  securityContext: {}

  configmap:
    data:
      CONSUMER_GROUP_NAME: router-metrics
      DEBUG_NO_SEND: false
      DEBUT_OUTPUT: true
      KAFKA_BROKERS:
      OPENTSDB_IP:
      SEND_FWD_TLSVERSION: true

s3Broker:
  enabled: true
  ## s3-broker container name
  ##
  name: s3-broker

  ## s3-broker container image
  ##
  image:
    repository: akkeris/s3-broker
    tag: release-6
    pullPolicy: IfNotPresent
  
  worker:
    name: s3-broker-worker
    resources: {}
      # limits:
      #   cpu: 10m
      #   memory: 32Mi
      # requests:
      #   cpu: 10m
      #   memory: 32Mi

  ## s3-broker priorityClassName
  ##
  priorityClassName: ""
  
  ingress:
    ## If true, s3-broker Ingress will be created
    ##
    enabled: false

    ## s3-broker Ingress annotations
    ##
    annotations: {}
    #   kubernetes.io/ingress.class: nginx
    #   kubernetes.io/tls-acme: 'true'

    ## s3-broker Ingress hostnames with optional path
    ## Must be provided if Ingress is enabled
    ##
    hosts: []
    #  - s3-broker.domain.com

    tls: []
    #  - secretName: s3-broker-tls
    #    hosts:
    #      - s3-broker.domain.com

  ## s3-broker Deployment Strategy type
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate

  ## Node tolerations for s3-broker scheduling to nodes with taints
  ## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
  ##
  tolerations: []
    # - key: "key"
    #   operator: "Equal|Exists"
    #   value: "value"
    #   effect: "NoSchedule|PreferNoSchedule|NoExecute(1.6 only)"

  ## Node labels for s3-broker pod assignment
  ## Ref: https://kubernetes.io/docs/user-guide/node-selection/
  ##
  nodeSelector: {}

  ## Pod affinity
  ##
  affinity: {}

  ## Use an alternate scheduler, e.g. "stork".
  ## ref: https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/
  ##
  # schedulerName:

  ## Annotations to be added to s3-broker pods
  ##
  podAnnotations: {}
  
  replicaCount: 1

  ## s3-broker resource requests and limits
  ## Ref: http://kubernetes.io/docs/user-guide/compute-resources/
  ##
  resources: {}
    # limits:
    #   cpu: 10m
    #   memory: 32Mi
    # requests:
    #   cpu: 10m
    #   memory: 32Mi

  ## Security context to be added to s3-broker pods
  ##
  securityContext: {}

  service:
    annotations: {}
    labels: {}
    clusterIP: ""

    ## List of IP addresses at which the s3-broker service is available
    ## Ref: https://kubernetes.io/docs/user-guide/services/#external-ips
    ##
    externalIPs: []

    servicePort: 80
    # nodePort: 30000
    type: nodePort

  configmap:
    data:
      DATABASE_URL:

serviceWatcherIstio:
  ## service-watcher-istio container name
  ##
  name: service-watcher-istio

  ## service-watcher-istio container image
  ##
  image:
    repository: akkeris/service-watcher-istio
    tag: release-12
    pullPolicy: IfNotPresent

  ## service-watcher-istio priorityClassName
  ##
  priorityClassName: ""
  
  ## service-watcher-istio Deployment Strategy type
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate

  ## Node tolerations for service-watcher-istio scheduling to nodes with taints
  ## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
  ##
  tolerations: []
    # - key: "key"
    #   operator: "Equal|Exists"
    #   value: "value"
    #   effect: "NoSchedule|PreferNoSchedule|NoExecute(1.6 only)"

  ## Node labels for service-watcher-istio pod assignment
  ## Ref: https://kubernetes.io/docs/user-guide/node-selection/
  ##
  nodeSelector: {}

  ## Pod affinity
  ##
  affinity: {}

  ## Use an alternate scheduler, e.g. "stork".
  ## ref: https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/
  ##
  # schedulerName:

  ## Annotations to be added to service-watcher-istio pods
  ##
  podAnnotations: {}
  
  replicaCount: 1

  ## service-watcher-istio resource requests and limits
  ## Ref: http://kubernetes.io/docs/user-guide/compute-resources/
  ##
  resources: {}
    # limits:
    #   cpu: 10m
    #   memory: 32Mi
    # requests:
    #   cpu: 10m
    #   memory: 32Mi

  ## Security context to be added to service-watcher-istio pods
  ##
  securityContext: {}

  configmap:
    data:
      CLUSTER: akkeris
      DEFAULT_DOMAIN:
      INSIDE_DOMAIN:
      KUBERNETES_API_SERVER: kubernetes.default.svc.cluster.local
      KUBERNETES_TOKEN_VAULT_PATH:
      NAMESPACE_BLACKLIST: kube-system,kube-public,quay-enterprise,subsystems,brokers,testcafe,akkeris-system,istio-system,nginx-ingress-i,prometheus,sites-system,velero
      REGIONAPI_SECRET:
      REGIONAPI_URL: http://region-api.akkeris-system

taas:
  ## taas container name
  ##
  name: taas

  ## taas container image
  ##
  image:
    repository: akkeris/taas
    tag: oneoffpod-vs-job-64
    pullPolicy: IfNotPresent

  ## taas priorityClassName
  ##
  priorityClassName: ""
  
  ingress:
    ## If true, taas Ingress will be created
    ##
    enabled: false

    ## taas Ingress annotations
    ##
    annotations: {}
    #   kubernetes.io/ingress.class: nginx
    #   kubernetes.io/tls-acme: 'true'

    ## taas Ingress hostnames with optional path
    ## Must be provided if Ingress is enabled
    ##
    hosts: []
    #  - taas.domain.com

    tls: []
    #  - secretName: taas-tls
    #    hosts:
    #      - taas.domain.com

  ## taas Deployment Strategy type
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate

  ## Node tolerations for taas scheduling to nodes with taints
  ## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
  ##
  tolerations: []
    # - key: "key"
    #   operator: "Equal|Exists"
    #   value: "value"
    #   effect: "NoSchedule|PreferNoSchedule|NoExecute(1.6 only)"

  ## Node labels for taas pod assignment
  ## Ref: https://kubernetes.io/docs/user-guide/node-selection/
  ##
  nodeSelector: {}

  ## Pod affinity
  ##
  affinity: {}

  ## Use an alternate scheduler, e.g. "stork".
  ## ref: https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/
  ##
  # schedulerName:

  ## Annotations to be added to taas pods
  ##
  podAnnotations: {}
  
  replicaCount: 1

  ## taas resource requests and limits
  ## Ref: http://kubernetes.io/docs/user-guide/compute-resources/
  ##
  resources: {}
    # limits:
    #   cpu: 10m
    #   memory: 32Mi
    # requests:
    #   cpu: 10m
    #   memory: 32Mi

  ## Security context to be added to taas pods
  ##
  securityContext: {}

  service:
    annotations: {}
    labels: {}
    clusterIP: ""

    ## List of IP addresses at which the taas service is available
    ## Ref: https://kubernetes.io/docs/user-guide/services/#external-ips
    ##
    externalIPs: []

    servicePort: 80
    # nodePort: 30000
    type: nodePort

  configmap:
    data:
      AKKERIS_API_URL: http://region-api.akkeris-system.svc.cluster.local
      APP_CONTROLLER_AUTH_SECRET: 
      APP_CONTROLLER_URL: http://api.default.svc.cluster.local
      ARTIFACTS_URL:
      AUTH_HOST: 
      AWS_S3_BUCKET: 
      DEFAULT_ORG:
      DEFAULT_START_DELAY: "15"
      DIAGNOSTICDB:
      DIRECTORY_LISTINGS: "true"
      DIRECTORY_LISTINGS_FORMAT: html
      ENABLE_SLACK_NOTIFICATIONS: "true"
      ES_URL: 
      GITHUB_TOKEN_SECRET: 
      KIBANA_URL: 
      KUBERNETES_API_SERVER: kubernetes.default
      KUBERNETES_API_VERSION: v1
      KUBERNETES_CLIENT_TYPE: token
      KUBERNETES_TOKEN_SECRET: 
      LOG_TIMESTAMPS_LOCALE: 
      LOG_URL: 
      PITDB: 
      PORT: "4000"
      POSTBACKURL: 
      RERUN_URL: 
      SLACK_NOTIFICATION_CHANNEL: 
      SLACK_NOTIFICATION_URL: 
      STRIP_PATH: /v1/artifacts
      TAAS_SVC_URL: http://taas.akkeris-system.svc.cluster.localA